name: Build Defold Linux

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches:
      - main

env:
  DM_PACKAGES_URL: https://github.com/llvm/llvm-project/releases/download/llvmorg-16.0.0/
  BUILD_REF: 1.10.4

jobs:
  bld-eng-linux:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        platform: [arm64-linux]
        # platform: [x86_64-linux, arm64-linux]

    steps:
      - name: Checkout Defold
        uses: actions/checkout@v4
        with:
          repository: defold/defold
          ref: ${{ env.BUILD_REF }}

      - name: Checkout patches
        uses: actions/checkout@v4
        with:
          path: patches

      # (not needed now)
      # - name: Apply patches
      #   run: |
      #     git apply patches/all.patch

      - name: Install Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
        with:
          python-version: 3.13

      - name: Install Java
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
        with:
          java-version: '21.0.5+11.0.LTS'
          distribution: temurin

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      - name: Install dependencies
        run: ci/ci.sh install --platform=${{ matrix.platform }}

      - name: Install ARM64 dependencies
        if: matrix.platform == 'arm64-linux'
        run: |
          sudo dpkg --add-architecture arm64
          sudo sed -i -E 's/^deb /deb [arch=amd64] /' /etc/apt/sources.list
          echo 'deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy main restricted universe multiverse' | sudo tee -a /etc/apt/sources.list
          echo 'deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-updates main restricted universe multiverse' | sudo tee -a /etc/apt/sources.list
          echo 'deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports jammy-security main restricted universe multiverse' | sudo tee -a /etc/apt/sources.list
          sudo apt update
          sudo apt install --no-install-recommends crossbuild-essential-arm64 qemu-user libc6-dev:arm64 libx11-dev:arm64 libxi-dev:arm64 libxext-dev:arm64 libxcb-xkb-dev:arm64 libglu-dev:arm64 libgl-dev:arm64 libgles-dev:arm64 libopenal-dev:arm64 libxrandr-dev:arm64

      - name: Build
        run: |
          export PATH=$PWD/tmp/dynamo_home/ext/SDKs/x86_64-linux/clang-16.0.0/bin/:$PATH
          ci/ci.sh --platform=${{ matrix.platform }} --skip-builtins --skip-tests --skip-build-tests --skip-docs engine

      - name: Test if engine runs
        if: matrix.platform == 'arm64-linux'
        run: |
          timeout 5 qemu-aarch64 -L /usr/aarch64-linux-gnu ./tmp/dynamo_home/bin/arm64-linux/dmengine_headless --version || true

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: defold-${{ matrix.platform }}
          path: |
            tmp/dynamo_home/bin/${{ matrix.platform }}
